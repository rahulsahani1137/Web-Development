public class Node {
    int data;
    Node left, right;

    public Node(int data) {
        this.data = data;
        left = right = null;
    }
}

public
 
class
 
BinarySearchTree
 
{

    public Node insert(Node root, int key)
 
{
        if (root == null) {
            return
 
new Node(key);
        }

        if (key < root.data) {
            root.left = insert(root.left, key);
        } else {
            root.right = insert(root.right, key);
        }

        return root;
    }

    public
 
static
 
void
 
main(String[] args)
 
{
        BinarySearchTree tree = new BinarySearchTree();
        Node root = new Node(8);
        tree.insert(root, 3);
        tree.insert(root, 10);
        tree.insert(root, 1);
        tree.insert(root, 6);
        tree.insert(root, 14);

        // In-order traversal to see the inserted nodes
        tree.inOrder(root);
    }

    private
 
void
 
inOrder(Node root)
 
{
        if (root != null) {
            inOrder(root.left);
            System.out.print(root.data + " ");
            inOrder(root.right);
        }
    }
}
