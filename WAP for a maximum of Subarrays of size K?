
import java.util.*;

public class Source {

    static void max(int arr[], int n, int g) {

        if (n == 0) {
            System.out.println("the array is empty");
        } else {
            if (g > n) {
                System.out.println("the size of subgroup exceeds the number of elements in the array");
            } else {

                Deque<Integer> dequeue = new LinkedList<Integer>();

                int i;
                for (i = 0; i < g; ++i) {

                    while (!dequeue.isEmpty() && arr[i] >= arr[dequeue.peekLast()]) {
                        dequeue.removeLast();
                    }
                    dequeue.addLast(i);
                }


                for (; i < n; ++i) {

                    System.out.print(arr[dequeue.peek()] + " ");

                    while ((!dequeue.isEmpty()) && dequeue.peek() <= i - g) {
                        dequeue.removeFirst();
                    }

                    while ((!dequeue.isEmpty()) && arr[i] >= arr[dequeue.peekLast()]) {
                        dequeue.removeLast();
                    }

                    dequeue.addLast(i);
                }

                System.out.print(arr[dequeue.peek()]);
            }
        }
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = in.nextInt();
        }
        int g = in.nextInt();
        max(arr, n, g);


    }
}
